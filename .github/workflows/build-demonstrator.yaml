# This workflow builds three images:
# - An image for a container that is exposing the web application (liaci-context)
# - An image for an initialization container for the web application that is downloading the assets from a blob storage
# - An image for an initialization container for the neo4j database that is downloading a database dump and restoring it 
#   to the a volume which can later be used by neo4j

name: Create and publish a Docker image
on:
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sintef/liaci-context
  DEMO_INIT_IMAGE_NAME: sintef/liaci-context-demo-init
  NEO4J_INIT_IMAGE_NAME: sintef/liaci-context-neo4j-init
  GITOPS_REPOSITORY: SINTEF/infrastructure-as-code-sustainable-communication-technologies

jobs:
  build-demonstrator-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for main image
        id: meta-main
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build demonstrator docker image
  
        uses: docker/build-push-action@v2
        with:
          context: ./demonstrator
          push: true
          tags: ${{ steps.meta-main.outputs.tags }}
          labels: ${{ steps.meta-main.outputs.labels }}
  
  deploy:
    if: contains(github.ref, 'heads')
    runs-on: ubuntu-latest
    needs:
      - build-demonstrator-image
      - build-demonstrator-init-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GITOPS_REPOSITORY }}
          ssh-key: ${{secrets.GITOPS_REPOSITORY_SSH_KEY}}
      - name: Patch version
        run: |
          yq --inplace '.image.tag |= "sha-'$GITHUB_REF_NAME'"' deployments/liaci-context/image-tag.yaml
      - name: Commit and push
        run: |
          git config user.email "114478573+sintef-sct-ci-machine-account@users.noreply.github.com"
          git config user.name "GitOps"
          git commit -am "GitOps update for LIACi Context"
          git pull --rebase
          git push

  build-demonstrator-init-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for main image
        id: meta-main
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.DEMO_INIT_IMAGE_NAME }}

      - name: Build demonstrator init docker image
  
        uses: docker/build-push-action@v2
        with:
          context: ./demonstrator/deployment/demonstrator-init
          push: true
          tags: ${{ steps.meta-main.outputs.tags }}
          labels: ${{ steps.meta-main.outputs.labels }}

  build-neo4j-init-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for main image
        id: meta-main
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.NEO4J_INIT_IMAGE_NAME }}

      - name: Build neo4j init docker image
  
        uses: docker/build-push-action@v2
        with:
          context: ./demonstrator/deployment/neo4j-init
          push: true
          tags: ${{ steps.meta-main.outputs.tags }}
          labels: ${{ steps.meta-main.outputs.labels }}