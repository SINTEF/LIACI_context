name: Create and publish a Docker image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sintef-9012/liaci-context # !!TODO!!
  DEMO_INIT_IMAGE_NAME: sintef-9012/liaci-context-demo-init # !!TODO!!
  NEO4J_INIT_IMAGE_NAME: sintef-9012/liaci-context-neo4j-init # !!TODO!!

jobs:
  build-demonstrator-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for main image
        id: meta-main
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build demonstrator docker image
  
        uses: docker/build-push-action@v2
        with:
          context: ./demonstrator
          push: false
          tags: ${{ steps.meta-main.outputs.tags }}
          labels: ${{ steps.meta-main.outputs.labels }}

  build-demonstrator-init-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for main image
        id: meta-main
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.DEMO_INIT_IMAGE_NAME }}

      - name: Build demonstrator init docker image
  
        uses: docker/build-push-action@v2
        with:
          context: ./demonstrator/deployment/demonstrator-init
          push: false
          tags: ${{ steps.meta-main.outputs.tags }}
          labels: ${{ steps.meta-main.outputs.labels }}

  build-neo4j-init-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for main image
        id: meta-main
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.NEO4J_INIT_IMAGE_NAME }}

      - name: Build neo4j init docker image
  
        uses: docker/build-push-action@v2
        with:
          context: ./demonstrator/deployment/neo4j-init
          push: false
          tags: ${{ steps.meta-main.outputs.tags }}
          labels: ${{ steps.meta-main.outputs.labels }}